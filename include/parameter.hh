#pragma once

#include "G4SystemOfUnits.hh"
#include "G4Types.hh"

const int NSpectrum = 50;

namespace parameter
{
    // To file editors
    // Set "const" when you define the variables!


    ////////////////////////
    // WLSMaterials.cc //
    ////////////////////////

    // att. length of sci-cube
    // http://lss.fnal.gov/archive/2005/pub/fermilab-pub-05-344.pdf
    const G4double absPS[NSpectrum] = {
        38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm,
        38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm,
        38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm,
        38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm,
        38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm, 38. * cm
    };

    // scintillation light yield (Typical value of POPOP)
    const G4double scintiLY = 10. / keV;

    // POPOP second emission : https://doi.org/10.1016/j.nima.2007.04.147
    const G4double scintilFast[] = {
        0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,
        0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,
        0.00, 0.00, 0.00, 0.00, 0.05, 0.10, 0.20, 0.30, 0.40, 0.60,
        0.50, 0.60, 0.70, 0.80, 1.00, 0.90, 0.80, 0.70, 0.60, 0.50,
        0.90, 1.00, 0.90, 0.50, 0.20, 0.05, 0.00, 0.00, 0.00, 0.00
    };

    // scintillation timing
    const G4double scintiTime = 1. * ns;



    // references of WLS fiber
    // http://kuraraypsf.jp/pdf/all.pdf
    // https://indico.cern.ch/event/143675/contributions/164201/
    // https://doi.org/10.1016/j.nima.2010.09.027

    // wave length shifting time
    const G4double WLSTime = 12 * ns;

    // att. length of WLS fiber
    const G4double absWLSfiber[] = {
        4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m,
        4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m,
        4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 2.80 * m,
        // 427.586  423.208     418.919     414.716  410.596     406.557     402.597  398.714     394.904     391.167
        // 387.5    383.901     380.368     376.9    373.494     370.149     366.864  363.636     360.465     357.349
        // 2.40*m,2.20*m,2.00*m,1.80*m,1.60*m,1.30*m,1.00*m,0.80*m,0.60*m,0.20*m,
        // 0.10*m,0.10*m,0.05*m,0.05*m,0.01*m,0.01*m,0.01*m,0.01*m,0.01*m,0.01*m};
        2.40 * m, 2.20 * m, 2.00 * m, 1.60 * m, 1.40 * m, 1.20 * m, 1.00 * m, 0.70 * m, 0.50 * m, 0.30 * m,
        0.10 * m, 0.05 * m, 0.02 * m, 1.0 * mm, 0.5 * mm, 0.2 * mm, 0.1 * mm, 0.1 * mm, 0.1 * mm, 0.1 * mm
    };

    const G4double refractiveIndexWLSfiber[] = {
        1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59,
        1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59,
        1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59,
        1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59,
        1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59, 1.59
    };

    // emission spectrum of WLS fiber
    const G4double emissionFib[] = {
        0.00, 0.00, 0.00, 0.02, 0.05, 0.09, 0.11, 0.14, 0.17, 0.20, //
        0.30, 0.35, 0.40, 0.45, 0.50, 0.60, 0.67, 0.80, 0.75, 0.75, //
        0.80, 0.85, 1.00, 0.92, 0.75, 0.62, 0.45, 0.20, 0.10, 0.00, //
        0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, //
        0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00
    };

    // absorption spectrum of WLS fiber
    // ?

    // att. length of clad1 & clad2
    const G4double absClad[] = {
        4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m,
        4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m,
        4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, // 485nm -- 430nm
        4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, // 428nm
        4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.50 * m, 4.40 * m, 4.20 * m, 4.00 * m  // 395nm -- 357nm
    };

    const G4double refractiveIndexClad1[] = {
        1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49,
        1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49,
        1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49,
        1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49,
        1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49, 1.49
    };

    const G4double refractiveIndexClad2[] = {
        1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42,
        1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42,
        1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42,
        1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42,
        1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42 };



    ////////////////////////////////
    // WLSDetectorConstruction.cc //
    ////////////////////////////////

    // sigma_alpha
    const G4double sigma_alpha = 0.0;

    // detection eff. of MPPC
    const G4double effi_mppc[] = {0.35, 0.30}; //


}
